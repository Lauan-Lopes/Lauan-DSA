
USE BikeStores

SELECT 
	P.CATEGORYID,
	COUNT(*) AS TOTALPRODUTOS 
FROM Production.Product AS P
GROUP BY P.CATEGORYID

SELECT 
	P.BrandID,
	P.CATEGORYID,
	COUNT(*) AS TOTALPRODUTOS 
FROM Production.Product AS P
GROUP BY P.BrandID, P.CATEGORYID;

WITH TOTAL_POR_CATEGORIA AS
(
	SELECT 
	P.CATEGORYID,
	COUNT(*) AS TOTALPRODUTOS 
FROM Production.Product AS P
GROUP BY P.CATEGORYID
)
SELECT 
	P.BrandID,
	P.CATEGORYID,
	COUNT(*) AS TOTALPRODUTOS, 
	TC.TOTALPRODUTOS AS TOTALCATEGORIA,
	COUNT(*)*100.0/TC.TOTALPRODUTOS AS 'PERCENT'
FROM Production.Product AS P
INNER JOIN TOTAL_POR_CATEGORIA AS TC ON TC.CATEGORYID = P.CategoryID
GROUP BY P.CATEGORYID, P.BrandID, TC.TOTALPRODUTOS


-- USANDO WINDOW FUNCTION PARA AGREGAR 

WITH TOTAL_PRODUTOS_CATEGORIA AS
(
	SELECT 
		P.BRANDID,
		P.CATEGORYID,
		COUNT(*) AS TOTALPRODUTOS 
	FROM Production.Product AS P
	GROUP BY P.BrandID, P.CATEGORYID
)

SELECT
	*,
	SUM(TOTALPRODUTOS) OVER(PARTITION BY CATEGORYID) AS TOTALBIKESCATEGORIA,
	TOTALPRODUTOS * 100.0 / SUM(TOTALPRODUTOS) OVER(PARTITION BY CATEGORYID) AS 'PERCENT'
FROM TOTAL_PRODUTOS_CATEGORIA


USE BikeStores;

SELECT 
	P.CATEGORYID,
	P.BRANDID,
	P.PRODUCTID,
	P.NAME,
	COUNT(*) OVER() AS PRODUTOS, 
	COUNT(*) OVER(PARTITION BY P.BRANDID) AS PRODUTOS_BRAND
FROM Production.PRODUCT AS P
WHERE P.CATEGORYID = 1
ORDER BY BrandID